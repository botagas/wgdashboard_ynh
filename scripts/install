#!/bin/bash

#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# INITIALIZE AND STORE SETTINGS
#=================================================



#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Setting up source files..."

ynh_setup_source --dest_dir="$install_dir"

chown -R "$app:www-data" "$install_dir"

#=================================================
# APP INITIAL CONFIGURATION
#=================================================
ynh_script_progression "Adding $app's configuration files..."

ynh_script_progression "Setting up Python virtual environment..."
pushd "$install_dir"
    python3 -m venv venv
    venv/bin/pip install --upgrade pip
    venv/bin/pip install -r src/requirements.txt
popd

mkdir -p "$install_dir/src/log"
mkdir -p "$install_dir/db" 
mkdir -p "$install_dir/download"

chown -R "$app:$app" "$install_dir"
chmod +x "$install_dir/src/wgd.sh"

# Configure WireGuard directory access for WGDashboard
setfacl -m g:"$app":rwx /etc/wireguard
setfacl -d -m g:"$app":rw /etc/wireguard

# Create WGDashboard backup directory with proper permissions
mkdir -p /etc/wireguard/WGDashboard_Backup
chown "$app":"$app" /etc/wireguard/WGDashboard_Backup

#=================================================
# WIREGUARD SETUP
#=================================================
ynh_script_progression "Configuring WireGuard..."

# Check if another WireGuard YunoHost package is already installed
wireguard_already_configured=false
if yunohost app list | grep -q "id: wireguard" 2>/dev/null; then
    ynh_print_info "WireGuard is already installed via YunoHost package, skipping basic setup..."
    wireguard_already_configured=true
fi

# Enable IP forwarding for WireGuard VPN functionality (if not already configured)
if [ "$wireguard_already_configured" = false ] || [ ! -f "/etc/sysctl.d/wireguard.conf" ]; then
    ynh_config_add --template="../conf/sysctl.conf" --destination="/etc/sysctl.d/$app.conf"
    sysctl -p "/etc/sysctl.d/$app.conf"
else
    ynh_print_info "IP forwarding already configured by existing WireGuard installation"
fi

ynh_print_info "WGDashboard will manage WireGuard configurations directly"

#=================================================
# SUDOERS CONFIGURATION
#=================================================
ynh_script_progression "Configuring sudo permissions for WireGuard management..."

# Allow WGDashboard user to run WireGuard commands without password
echo "$app ALL=(ALL) NOPASSWD: /usr/bin/wg, /usr/bin/wg-quick" > "/etc/sudoers.d/$app"

ynh_print_info "Sudo permissions configured for WireGuard management"

#=================================================
# SYSTEM CONFIGURATION
#=================================================
ynh_script_progression "Adding system configurations related to $app..."

ynh_config_add_nginx

ynh_config_add_systemd

yunohost service add "$app" --description="A WireGuard Dashboard" --log="/var/log/$app/$app.log"

ynh_config_add_logrotate

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

ynh_systemctl --service="$app" --action="start"

#=================================================
# AUTOMATED INITIAL SETUP
#=================================================
ynh_script_progression "Configuring WGDashboard initial setup..."

wg_user="$admin"

if [[ -n "$password" ]]; then
    wg_password="$password"
else
    wg_password=$(ynh_string_random)
fi

ynh_app_setting_set --app=$app --key=wg_user --value="$wg_user"
ynh_app_setting_set --app=$app --key=wg_password --value="$wg_password"

# Wait for WGDashboard to be ready
sleep 5

# Perform initial authentication with default credentials (admin/admin)
auth_response=$(curl -s -X POST "http://127.0.0.1:$port_main_tcp/api/authenticate" \
    -H "Content-Type: application/json" \
    -d '{"username":"admin","password":"admin","totp":""}' \
    --connect-timeout 10 --max-time 30)

if echo "$auth_response" | grep -q '"status":true'; then
    ynh_print_info "Initial authentication successful, proceeding with setup..."
    
    # Extract session cookies for subsequent request
    cookies=$(curl -s -c - -X POST "http://127.0.0.1:$port_main_tcp/api/authenticate" \
        -H "Content-Type: application/json" \
        -d '{"username":"admin","password":"admin","totp":""}' | grep -E '(authToken|session)' | awk '{print $6"="$7}' | tr '\n' ';')
    
    # Complete the setup with the YunoHost admin user credentials
    setup_response=$(curl -s -X POST "http://127.0.0.1:$port_main_tcp/api/Welcome_Finish" \
        -H "Content-Type: application/json" \
        -H "Cookie: $cookies" \
        -d "{\"username\":\"$wg_user\",\"newPassword\":\"$wg_password\",\"repeatNewPassword\":\"$wg_password\",\"enable_totp\":false}" \
        --connect-timeout 10 --max-time 30)
    
    if echo "$setup_response" | grep -q '"status":true'; then
        ynh_print_info "WGDashboard setup completed successfully!"
        ynh_print_info "Username: $wg_user"
        ynh_print_info "Password: $wg_password"
    else
        ynh_print_warn "Failed to complete WGDashboard setup automatically. You will need to complete setup manually via web interface."
    fi
else
    ynh_print_warn "Could not connect to WGDashboard for automatic setup. You may need to complete setup manually via web interface."
fi

#=================================================
# WRAPPER SCRIPT INSTALLATION
#=================================================
ynh_script_progression "Setting up WireGuard command wrappers..."

# Create and install wrapper 
mkdir -p "$install_dir/bin"

cp "../conf/wg-wrapper.sh" "$install_dir/bin/wg"
chmod +x "$install_dir/bin/wg"

cp "../conf/wg-quick-wrapper.sh" "$install_dir/bin/wg-quick"
chmod +x "$install_dir/bin/wg-quick"

chown "$app":"$app" "$install_dir/bin/wg" "$install_dir/bin/wg-quick"

ynh_print_info "WireGuard command wrappers installed"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Installation of $app completed"
