#!/bin/bash

#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# INITIALIZE AND STORE SETTINGS
#=================================================



#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Setting up source files..."

ynh_setup_source --dest_dir="$install_dir"

chown -R "$app:www-data" "$install_dir"

#=================================================
# APP INITIAL CONFIGURATION
#=================================================
ynh_script_progression "Adding $app's configuration files..."

# Set up Python virtual environment and install dependencies
ynh_script_progression "Setting up Python virtual environment..."
pushd "$install_dir"
    python3 -m venv venv
    venv/bin/pip install --upgrade pip
    venv/bin/pip install -r src/requirements.txt
popd

# Create necessary directories for WGDashboard
mkdir -p "$install_dir/src/log"
mkdir -p "$install_dir/db" 
mkdir -p "$install_dir/download"

# Set proper permissions
chown -R "$app:$app" "$install_dir"
chmod +x "$install_dir/src/wgd.sh"

# Configure WireGuard directory access for WGDashboard
setfacl -m g:"$app":rwx /etc/wireguard
setfacl -d -m g:"$app":rw /etc/wireguard

# Create WGDashboard backup directory with proper permissions
mkdir -p /etc/wireguard/WGDashboard_Backup
chown "$app":"$app" /etc/wireguard/WGDashboard_Backup

#=================================================
# WIREGUARD SETUP
#=================================================
ynh_script_progression "Configuring WireGuard..."

# Check if another WireGuard YunoHost package is already installed
wireguard_already_configured=false
if yunohost app list --installed | grep -q "id: wireguard" 2>/dev/null; then
    ynh_print_info "WireGuard is already installed via YunoHost package, skipping basic setup..."
    wireguard_already_configured=true
fi

# Enable IP forwarding for WireGuard VPN functionality (if not already configured)
if [ "$wireguard_already_configured" = false ] || [ ! -f "/etc/sysctl.d/wireguard.conf" ]; then
    ynh_config_add --template="../conf/sysctl.conf" --destination="/etc/sysctl.d/$app.conf"
    sysctl -p "/etc/sysctl.d/$app.conf"
else
    ynh_print_info "IP forwarding already configured by existing WireGuard installation"
fi

# Ensure WireGuard service is available but don't start specific configs
# WGDashboard will manage individual configurations as needed
systemctl enable wg-quick@.service --quiet || true

#=================================================
# SYSTEM CONFIGURATION
#=================================================
ynh_script_progression "Adding system configurations related to $app..."

# Create a dedicated NGINX config using the conf/nginx.conf template
ynh_config_add_nginx

# Create a dedicated systemd config
ynh_config_add_systemd

yunohost service add "$app" --description="A WireGuard Dashboard" --log="/var/log/$app/$app.log"

# Use logrotate to manage application logfile(s)
ynh_config_add_logrotate

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

# Start a systemd service
ynh_systemctl --service="$app" --action="start"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Installation of $app completed"
